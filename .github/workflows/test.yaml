name: Test

on:
    push:
        branches: [main]
        tags:
            - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10, v1.0-rc.1, v2.1-alpha, v3.0-beta.3
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -e {0} # -e to fail on error

        strategy:
            fail-fast: false
            matrix:
                python: ["3.10", "3.12"]
                os: [ubuntu-latest]

        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python }}

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python }}

            - name: Get pip cache dir
              id: pip-cache-dir
              run: |
                  echo "::set-output name=dir::$(pip cache dir)"
            - name: Restore pip cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.pip-cache-dir.outputs.dir }}
                  key: pip-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/pyproject.toml') }}
                  restore-keys: |
                      pip-${{ runner.os }}-${{ env.pythonLocation }}-
            - name: Install test dependencies
              run: |
                  python -m pip install --upgrade pip wheel
                  pip install pytest-cov
            - name: Install dependencies
              run: |
                  pip install --pre -e ".[dev,test]"

            - name: Download artifact of test data
              if: matrix.python == '3.12'
              uses: dawidd6/action-download-artifact@v2
              with:
                  workflow: prepare_test_data.yaml
                  name: data
                  path: ./data

            - name: List the data directory
              if: matrix.python == '3.12'
              run: |
                  ls -l ./data
                  pwd

            - name: Test
              env:
                  MPLBACKEND: agg
                  PLATFORM: ${{ matrix.os }}
                  DISPLAY: :42
              run: |
                  pytest -v --cov --color=yes --cov-report=xml
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  name: coverage
                  verbose: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
